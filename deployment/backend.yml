# RBAC Configuration for Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: baijan-ide-service-account
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-exec-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-exec-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-exec-role
subjects:
  - kind: ServiceAccount
    name: baijan-ide-service-account
    namespace: default

---
# Pod Definition
apiVersion: v1
kind: Pod
metadata:
  name: baijan-ide-backend
  labels:
    app: baijan-ide-backend
spec:
  serviceAccountName: baijan-ide-service-account
  containers:
    - name: baijan-ide-backend
      image: baijan/baijan-ide-backend:latest # Replace with your app image
      ports:
        - containerPort: 4000

---
# Service Definition (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: baijan-ide-backend-service
spec:
  selector:
    app: baijan-ide-backend # This matches the label in the deployment and pod
  ports:
    - protocol: TCP
      port: 4000 # The port the service listens to internally (ClusterIP access)
      targetPort: 4000 # The port where the app is running inside the pod

---
# Service Definition (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: baijan-ide-backend-service-np
spec:
  selector:
    app: baijan-ide-backend # Match the label of your pod
  ports:
    - protocol: TCP
      port: 4000 # Port that the service will expose
      targetPort: 4000 # Port on the container
      nodePort: 30001 # The port to expose on each node
  type: NodePort # Expose the service as NodePort
